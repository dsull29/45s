{"version":3,"sources":["Score/Score.js","useFetch.js","Card.js","Hand.js","cardValues.js","scripts.js","Bid.js","deckFuncs.js","SelectSuit.js","Discard.js","BidInfo.js","Play/PlayCard.js","Play/PlayerTurn.js","Play/Turn.js","Play/Play.js","Round.js","Game.js","App.js","index.js"],"names":["Score","round","gameScore","className","style","textAlign","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Card","card","src","image","alt","width","height","Hand","deckUrl","player","cards","piles","trumpValues","offSuitValues","heartTrumpOrder","diamondTrumpOrder","spadesTrumpOrder","clubsTrumpOrder","heartOffSuitOrder","diamondOffSuitOrder","spadesOffSuitOrder","clubsOffSuitOrder","evaluateHand","heartHandVal","diamondHandVal","spadeHandVal","clubHandVal","i","getHeartValue","getDiamondValue","getSpadeValue","getClubValue","getCardValue","trump","indexOf","getBid","handValues","bestHandVal","sort","a","b","playerBid","getWorstCard","worstCard","worstCardVal","length","curCardVal","code","getBestCard","bestCard","bestCardVal","discardCodes","sendDiscardData","discard","discardData","redrawCount","remaining","redraw","redrawData","push","assign","toString","response","count","playerCard","sendPlayerCard","Bid","hands","order","dealer","sendBidData","playerBidded","setPlayerBidded","setPlayerBid","highBid","setHighBid","highBidder","setHighBidder","isDealer","bidRes","bidders","bestBid","bidding","onSubmit","e","preventDefault","value","onChange","target","setHands","setRoundOrder","getRoundOrder","drawresponse","drawData","hash","val","SelectSuit","sendTrumpSuit","trumpSuit","setTrumpSuit","Discard","discard0","setDiscard0","discard1","setDiscard1","discard2","setDiscard2","discard3","setDiscard3","discard4","setDiscard4","discards","getNewCards","type","checked","onClick","BidInfo","bidData","suit","book","bid","bidder","PlayCard","PlayerTurn","sendPlayCard","position","leadSuit","setPlayerCard","playCardNow","Turn","cardPlay","setCardPlay","taco","playCard","Play","winner","sendBookInfo","bookInfo","playCard1","setPlayCard1","playCard2","setPlayCard2","playCard3","setPlayCard3","playCard4","setPlayCard4","setLeadSuit","turn","setTurn","bookNum","bookOrder","mung","roundOrder","lastWinner","lastBook","winningPlayer","getBookOrder","charAt","setTimeout","curBestValue","highCard","whoseTurn","checkPlayerPosition","x","DisplayLog","Round","sendRoundScore","newRound","setBidData","stage","setStage","setDiscardData","setBookInfo","setBookNum","setLog","dealHands","team1BookCount","team2BookCount","highCardWinner","cardValue","Game","setRound","setGameScore","roundScore","setRoundScore","scoreLog","setScoreLog","deck_id","tempScore","App","inGame","setInGame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAgBeA,EAdD,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACtB,OACE,qBAAKC,UAAU,aAAaC,MAAO,CAAEC,UAAW,QAAhD,SACE,qBAAKF,UAAU,QAAf,SACE,iCACE,sBAAK,cAAY,aAAjB,qBAAuCD,EAAU,MACjD,sBAAK,cAAY,aAAjB,qBAAuCA,EAAU,MACjD,sBAAK,cAAY,QAAjB,oBAAiCD,aCwB5BK,EA/BE,SAACC,GACd,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAyBA,OAxBAC,qBAAU,WACN,IAAMC,EAAY,IAAIC,gBAqBtB,OApBAC,MAAMX,EAAK,CAAEY,OAAQH,EAAUG,SAC1BC,MAAK,SAAAC,GACF,IAAKA,EAAIC,GACL,MAAMC,MAAM,0CAEhB,OAAOF,EAAIG,UAEdJ,MAAK,SAAAX,GACFC,EAAQD,GACRG,GAAa,GACbE,EAAS,SAEZW,OAAM,SAAAC,GACc,eAAbA,EAAIC,KACJC,QAAQC,IAAI,kBAEZjB,GAAa,GACbE,EAASY,EAAII,aAGlB,kBAAMd,EAAUe,WACxB,CAACxB,IACG,CAAEE,OAAME,YAAWE,UCpBfmB,EAVF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEZ,OACI,8BACI,qBAAKC,IAAKD,EAAKE,MAAOC,IAAI,OAAOC,MAAM,OAAOC,OAAO,YC4BlDC,EA7BF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,OAAQxC,EAAY,EAAZA,MAC/B,EAAmCK,EACjCkC,EAAU,SAAWC,EAAS,UADxBhC,EAAR,EAAQA,KAAME,EAAd,EAAcA,UAAWE,EAAzB,EAAyBA,MAIrB6B,EAAQ,GAKZ,OAJIjC,GAAQA,EAAKkC,MAAMF,IAAWhC,EAAKkC,MAAMF,GAAQC,QACnDA,EAAQjC,EAAKkC,MAAMF,GAAQC,OAI3B,gCACG7B,GAAS,8BAAMA,IACfF,GAAa,6CACbF,GAAQiC,GACP,8BACE,sBAAKvC,UAAU,OAAf,UACGuC,EAAM,IAAM,cAAC,EAAD,CAAMT,KAAMS,EAAM,GAAIzC,MAAOA,IACzCyC,EAAM,IAAM,cAAC,EAAD,CAAMT,KAAMS,EAAM,GAAIzC,MAAOA,IACzCyC,EAAM,IAAM,cAAC,EAAD,CAAMT,KAAMS,EAAM,GAAIzC,MAAOA,IACzCyC,EAAM,IAAM,cAAC,EAAD,CAAMT,KAAMS,EAAM,GAAIzC,MAAOA,IACzCyC,EAAM,IAAM,cAAC,EAAD,CAAMT,KAAMS,EAAM,GAAIzC,MAAOA,a,uBCxBhD2C,EAAc,EACf,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAE3DC,EAAgB,CAAC,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAK5DC,EAAkB,CACtB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEIC,EAAoB,CACxB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEIC,EAAmB,CACvB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEIC,EAAkB,CACtB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAGIC,EAAoB,CACxB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEIC,EAAsB,CAC1B,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEIC,EAAqB,CACzB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEIC,EAAoB,CACxB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAGK,SAASC,EAAaZ,GAC3B,IAAIa,EAAcC,EAAgBC,EAAcC,EAChDH,EAAeC,EAAiBC,EAAeC,EAAc,EAE7D,I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","file":"static/js/main.79a3ff4b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Score = ({ round, gameScore }) => {\n  return (\n    <div className=\"scoreboard\" style={{ textAlign: \"left\" }}>\n      <div className=\"score\">\n        <span>\n          <div data-testid=\"team1Score\">Team 1: {gameScore[0]}</div>\n          <div data-testid=\"team2Score\">Team 2: {gameScore[1]}</div>\n          <div data-testid=\"round\">Round: {round}</div>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Score;\n","import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        const abortCont = new AbortController();\n        fetch(url, { signal: abortCont.signal })\n            .then(res => {\n                if (!res.ok) {\n                    throw Error('Could not fetch data for that resource');\n                }\n                return res.json();\n            })\n            .then(data => {\n                setData(data);\n                setIsPending(false);\n                setError(null);\n            })\n            .catch(err => {\n                if (err.name === \"AbortError\") {\n                    console.log('fetch aborted')\n                } else {\n                    setIsPending(false);\n                    setError(err.message);\n                }\n            })\n        return () => abortCont.abort();\n    }, [url]);\n    return { data, isPending, error }\n}\n\nexport default useFetch;","const Card = ({ card }) => {\n\n    return (\n        <div>\n            <img src={card.image} alt=\"Card\" width=\"100%\" height=\"100%\" />\n        </div>\n\n    );\n}\n\nexport default Card;","import useFetch from \"./useFetch\";\nimport Card from \"./Card\";\n\nconst Hand = ({ deckUrl, player, round }) => {\n  const { data, isPending, error } = useFetch(\n    deckUrl + \"/pile/\" + player + \"/list/\"\n  );\n    \n  var cards = [];\n  if (data && data.piles[player] && data.piles[player].cards) {\n    cards = data.piles[player].cards;\n  }\n\n  return (\n    <div>\n      {error && <div>{error}</div>}\n      {isPending && <div>Loading...</div>}\n      {data && cards && (\n        <div>\n          <div className=\"hand\">\n            {cards[0] && <Card card={cards[0]} round={round} />}\n            {cards[1] && <Card card={cards[1]} round={round} />}\n            {cards[2] && <Card card={cards[2]} round={round} />}\n            {cards[3] && <Card card={cards[3]} round={round} />}\n            {cards[4] && <Card card={cards[4]} round={round} />}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Hand;\n","const trumpValues = [\n    -35, -21, -18, -13, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1,\n  ];\n  const offSuitValues = [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0];\n  const offSuitValuesNonLead = [\n    27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14,\n  ];\n  \n  const heartTrumpOrder = [\n    \"5H\",\n    \"JH\",\n    \"AH\",\n    \"KH\",\n    \"QH\",\n    \"0H\",\n    \"9H\",\n    \"8H\",\n    \"7H\",\n    \"6H\",\n    \"4H\",\n    \"3H\",\n    \"2H\",\n  ];\n  const diamondTrumpOrder = [\n    \"5D\",\n    \"JD\",\n    \"AH\",\n    \"AD\",\n    \"KD\",\n    \"QD\",\n    \"0D\",\n    \"9D\",\n    \"8D\",\n    \"7D\",\n    \"6D\",\n    \"4D\",\n    \"3D\",\n    \"2D\",\n  ];\n  const spadesTrumpOrder = [\n    \"5S\",\n    \"JS\",\n    \"AH\",\n    \"AS\",\n    \"KS\",\n    \"QS\",\n    \"2S\",\n    \"3S\",\n    \"4S\",\n    \"6S\",\n    \"7S\",\n    \"8S\",\n    \"9S\",\n    \"0S\",\n  ];\n  const clubsTrumpOrder = [\n    \"5C\",\n    \"JC\",\n    \"AH\",\n    \"AC\",\n    \"KC\",\n    \"QC\",\n    \"2C\",\n    \"3C\",\n    \"4C\",\n    \"6C\",\n    \"7C\",\n    \"8C\",\n    \"9C\",\n    \"0C\",\n  ];\n  \n  const heartOffSuitOrder = [\n    \"2H\",\n    \"3H\",\n    \"4H\",\n    \"5H\",\n    \"6H\",\n    \"7H\",\n    \"8H\",\n    \"9H\",\n    \"0H\",\n    \"JH\",\n    \"QH\",\n    \"KH\",\n  ];\n  const diamondOffSuitOrder = [\n    \"AD\",\n    \"2D\",\n    \"3D\",\n    \"4D\",\n    \"5D\",\n    \"6D\",\n    \"7D\",\n    \"8D\",\n    \"9D\",\n    \"0D\",\n    \"JD\",\n    \"QD\",\n    \"KD\",\n  ];\n  const spadesOffSuitOrder = [\n    \"0S\",\n    \"9S\",\n    \"8S\",\n    \"7S\",\n    \"6S\",\n    \"5S\",\n    \"4S\",\n    \"3S\",\n    \"2S\",\n    \"AS\",\n    \"JS\",\n    \"QS\",\n    \"KS\",\n  ];\n  const clubsOffSuitOrder = [\n    \"0C\",\n    \"9C\",\n    \"8C\",\n    \"7C\",\n    \"6C\",\n    \"5C\",\n    \"4C\",\n    \"3C\",\n    \"2C\",\n    \"AC\",\n    \"JC\",\n    \"QC\",\n    \"KC\",\n  ];\n\n  export function evaluateHand(cards) {\n    let heartHandVal, diamondHandVal, spadeHandVal, clubHandVal;\n    heartHandVal = diamondHandVal = spadeHandVal = clubHandVal = 0;\n  \n    for (let i = 0; i < 5; i++) {\n      var card = cards[i];\n      heartHandVal += getHeartValue(card);\n      diamondHandVal += getDiamondValue(card);\n      spadeHandVal += getSpadeValue(card);\n      clubHandVal += getClubValue(card);\n    }\n  \n    return [heartHandVal, diamondHandVal, spadeHandVal, clubHandVal];\n  }\n  \n  export function getCardValue(card, trump) {\n    switch (trump) {\n      case \"Hearts\":\n        return getHeartValue(card);\n      case \"Diamonds\":\n        return getDiamondValue(card);\n      case \"Spades\":\n        return getSpadeValue(card);\n      case \"Clubs\":\n        return getClubValue(card);\n      default:\n        return 0;\n    }\n  }\n  \n  function getHeartValue(card) {\n    return (\n      trumpValues[heartTrumpOrder.indexOf(card)] ||\n      offSuitValues[diamondOffSuitOrder.indexOf(card)] ||\n      offSuitValues[clubsOffSuitOrder.indexOf(card)] ||\n      offSuitValues[spadesOffSuitOrder.indexOf(card)]\n    );\n  }\n  \n  function getDiamondValue(card) {\n    return (\n      trumpValues[diamondTrumpOrder.indexOf(card)] ||\n      offSuitValues[heartOffSuitOrder.indexOf(card)] ||\n      offSuitValues[clubsOffSuitOrder.indexOf(card)] ||\n      offSuitValues[spadesOffSuitOrder.indexOf(card)]\n    );\n  }\n  \n  function getSpadeValue(card) {\n    return (\n      trumpValues[spadesTrumpOrder.indexOf(card)] ||\n      offSuitValues[diamondOffSuitOrder.indexOf(card)] ||\n      offSuitValues[clubsOffSuitOrder.indexOf(card)] ||\n      offSuitValues[heartOffSuitOrder.indexOf(card)]\n    );\n  }\n  \n  function getClubValue(card) {\n    return (\n      trumpValues[clubsTrumpOrder.indexOf(card)] ||\n      offSuitValues[diamondOffSuitOrder.indexOf(card)] ||\n      offSuitValues[heartOffSuitOrder.indexOf(card)] ||\n      offSuitValues[spadesOffSuitOrder.indexOf(card)]\n    );\n  }","import { getCardValue, evaluateHand } from \"./cardValues\";\n\nexport function getDealer(dealers) {\n  let order = dealers;\n  let dealer = order.shift();\n  // TODO fix the order here\n  order.push(dealer);\n  return { dealer, order };\n}\n\nexport function bidding(cards, bidders) {\n  let bestBid, highBidder;\n  var highBid = 0;\n  for (let i = 0; i < 3; i++) {\n    bestBid = getBid(evaluateHand(cards[i]));\n    if (bestBid > highBid) {\n      highBid = bestBid;\n      highBidder = bidders[i];\n    }\n  }\n  return { highBid, highBidder };\n}\n\nfunction getBid(handValues) {\n  var bestHandVal = handValues.sort(function (a, b) {\n    return a - b;\n  })[0];\n  var playerBid = null;\n  if (bestHandVal < 0 - 25) {\n    playerBid = \"20\";\n  } else if (bestHandVal < 0 - 5) {\n    playerBid = \"15\";\n  }\n  return playerBid;\n}\n\nexport function getWorstCard(cards, trump) {\n  var worstCard = null;\n  var worstCardVal = 0 - 50;\n\n  for (let i = 0; i < cards.length; i++) {\n    var curCardVal = getCardValue(cards[i].code, trump);\n    if (curCardVal > worstCardVal) {\n      worstCardVal = curCardVal;\n      worstCard = i;\n    }\n  }\n  return cards[worstCard];\n}\n\nexport function getBestCard(cards, trump) {\n  var bestCard = null;\n  var bestCardVal = 50;\n\n  for (let i = 0; i < cards.length; i++) {\n    var curCardVal = getCardValue(cards[i].code, trump);\n    if (curCardVal < bestCardVal) {\n      bestCardVal = curCardVal;\n      bestCard = i;\n    }\n  }\n\n  return cards[bestCard];\n}\n\nexport function getPlayerHand(url, player) {\n  var tempData;\n\n  const playerHand = fetch(url)\n    .then((res) => {\n      if (!res.ok) {\n        throw Error(\"Could not fetch data for that resource\");\n      }\n      return res.json();\n    })\n    .then((data) => {\n    });\n  playerHand.then((data) => {\n    return data;\n    // let cards = data.piles[player].cards\n    // let codes = []\n    // let tempData = null\n    // for (let i = 0; i < cards.length; i++) {\n    //     codes.push(cards[i].code)\n    // }\n    // tempData = {\n    //     player: player,\n    //     cards,\n    //     codes\n    // }\n    // return tempData\n  });\n\n  return tempData;\n}\n\n/** Handles discarding, drawing new cards, and assigning that number of cards to the player\n * @param  {String} deckUrl URL of the deck being used for this round\n * @param  {Array} discardCodes Card codes to discard\n * @param  {String} player Player whose hand is being worked\n * @param  {Function} sendDiscardData Callback function to 'Play' to signify the process is done\n */\nexport async function getNewCards(\n  deckUrl,\n  discardCodes,\n  player,\n  sendDiscardData\n) {\n  const discardData = await discard(deckUrl, discardCodes);\n\n  const redrawCount = 5 - discardData.piles[player].remaining;\n  const redrawData = await redraw(deckUrl, redrawCount);\n\n  let cards = [];\n  if (redrawData.cards) {\n    for (let i = 0; i < redrawData.cards.length; i++)\n      cards.push(redrawData.cards[i].code);\n  }\n\n  await assign(deckUrl, player, cards);\n\n  sendDiscardData(true);\n}\n\nasync function discard(deckUrl, discardCodes) {\n  const response = await fetch(\n    deckUrl + \"/pile/discard/add/?cards=\" + discardCodes.toString()\n  )\n    .then((res) => {\n      if (!res.ok) {\n        throw Error(\"Could not fetch data for that resource\");\n      }\n      return res.json();\n    })\n    .then((data) => {\n      return data;\n    });\n  return response;\n}\n\n/**\n * Draw a number of cards from the deck\n * @param  {String} deckUrl URL to the deck where cards will be drawn form\n * @param  {Int} count\n * @return response data\n */\nasync function redraw(deckUrl, count) {\n  const response = await fetch(deckUrl + \"/draw/?count=\" + count)\n    .then((res) => {\n      if (!res.ok) {\n        throw Error(\"Could not fetch data for that resource\");\n      }\n      return res.json();\n    })\n    .then((data) => {\n      return data;\n    });\n  return response;\n}\n\n/** Assign cards to the players pile\n * @param  {String} deckUrl URL to the deck where the cards will be assigned\n * @param  {String} player Player pile to assign the cards to\n * @param  {Array} cards List of cards to assign to the pile\n * @return fetch response data\n */\nasync function assign(deckUrl, player, cards) {\n  const response = await fetch(\n    deckUrl + \"/pile/\" + player + \"/add/?cards=\" + cards.toString()\n  )\n    .then((res) => {\n      if (!res.ok) {\n        throw Error(\"Could not fetch data for that resource\");\n      }\n      return res.json();\n    })\n    .then((data) => {\n      return data;\n    });\n  return response;\n}\n/** Moves the player's selected card to the discard pile and plays the card on the table\n * @param  {String} deckUrl URL to the deck being used\n * @param  {String} playerCard Card code of the card being played\n * @param  {Function} sendPlayerCard Calls back to play with the PlayerCard\n */\nexport async function playCardNow(deckUrl, playerCard, sendPlayerCard) {\n  const response = await fetch(\n    deckUrl + \"/pile/discard/add/?cards=\" + playerCard.code\n  )\n    .then((res) => {\n      if (!res.ok) {\n        throw Error(\"Could not fetch data for that resource\");\n      }\n      return res.json();\n    })\n    .then((data) => {\n      return playerCard;\n    });\n  sendPlayerCard(playerCard);\n}\n","import { useEffect, useState } from 'react';\nimport { bidding } from './scripts';\n\nconst Bid = ({ hands, order, dealer, sendBidData }) => {\n    const [playerBidded, setPlayerBidded] = useState(false);\n    const [playerBid, setPlayerBid] = useState(\"Take\");\n    const [highBid, setHighBid] = useState(\"\");\n    const [highBidder, setHighBidder] = useState(\"\");\n\n    const player = \"player1\";\n    var isDealer = (player === dealer)\n    useEffect(() => {\n        var bidRes = bidding(hands, order)\n        if (bidRes.highBid) {\n            setHighBid(bidRes.highBid);\n            setHighBidder(bidRes.highBidder);\n        }\n    }, [hands, order])\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (playerBid === \"Take\") {\n            setHighBidder(player);\n        } else if (playerBid !== \"Pass\") {\n            setHighBid(playerBid);\n            setHighBidder(player);\n        }\n        setPlayerBidded(true)\n    }\n\n    if (playerBidded) {\n        sendBidData({\n            highBid: { highBid },\n            highBidder: { highBidder }\n        })\n    }\n\n    return (\n        <div className=\"bid\">\n            <div className=\"currentBid\">{highBid} from {highBidder}</div>\n            {/* {trumpSelected && <div>in {trumpSuit} </div>} */}\n            {!playerBidded && <div>\n                <form onSubmit={handleSubmit}>\n                    <select\n                        value={playerBid}\n                        onChange={(e) => setPlayerBid(e.target.value)}>\n                        {isDealer && <option value=\"Take\">Take</option>}\n                        <option value=\"Pass\">Pass</option>\n                        {highBid === null && <option value=\"15\">15</option>}\n                        {highBid === \"15\" && <option value=\"20\">20</option>}\n                        <option value=\"25\">25</option>\n                        <option value=\"30\">30</option>\n                        <option value=\"30No\">30 No Draw</option>\n                    </select>\n                    <button>Place Bid</button>\n                </form>\n            </div>}\n        </div>\n    );\n}\n\nexport default Bid;","export async function dealHands(deckUrl,round,setIsPending,setHands,setRoundOrder) {\n  const order = getRoundOrder(round);\n  await fetch(deckUrl + \"/shuffle/\");\n  const drawresponse = await fetch(deckUrl + \"/draw/?count=20\");\n  const drawData = await drawresponse.json();\n  let hands = hash(drawData.cards);\n  console.log(\"handCheck\",hands,drawData)\n  await fetch(deckUrl + \"/pile/\" + order[0] + \"/add/?cards=\" + hands[0].toString())\n  await fetch(deckUrl + \"/pile/\" + order[1] + \"/add/?cards=\" + hands[1].toString())\n  await fetch(deckUrl + \"/pile/\" + order[2] + \"/add/?cards=\" + hands[2].toString())\n  const done = await fetch(deckUrl + \"/pile/\" + order[3] + \"/add/?cards=\" + hands[3].toString())\n  if (done) {\n    setRoundOrder(order)\n    setHands(hands)\n    setIsPending(false)\n  }\n}\n\nfunction hash(cards) {\n  const hand1 = [\n    cards[0].code,\n    cards[1].code,\n    cards[2].code,\n    cards[12].code,\n    cards[13].code,\n  ];\n  const hand2 = [\n    cards[3].code,\n    cards[4].code,\n    cards[5].code,\n    cards[14].code,\n    cards[15].code,\n  ];\n  const hand3 = [\n    cards[6].code,\n    cards[7].code,\n    cards[8].code,\n    cards[16].code,\n    cards[17].code,\n  ];\n  const hand4 = [\n    cards[9].code,\n    cards[10].code,\n    cards[11].code,\n    cards[18].code,\n    cards[19].code,\n  ];\n  return [hand1, hand2, hand3, hand4];\n}\n\nexport function getRoundOrder(round) {\n  let val = (round-1) % 4 \n  let order;\n  if (val===0) {\n    order =  [\"player2\", \"player3\", \"player4\", \"player1\"];\n  } else if (val===1) {\n    order = [\"player3\", \"player4\", \"player1\", \"player2\"];\n  } else if (val===2) {\n    order = [\"player4\", \"player1\", \"player2\", \"player3\"];\n  } else if (val===3) {\n    order = [\"player1\", \"player2\", \"player3\", \"player4\"];\n  };\n  return order\n}// module.exports = { dealHand, asyncCall};\n\n/** Get's the order relative to the last player to win a hand\n ** The player who won the last book goes first\n * @param  {String} lastWinner name of the last player to win a book\n */\n export function getBookOrder(mung,roundOrder) {\n  let order = [];\n  let lastBook = mung[mung.length-1]\n  let lastWinner\n  if (lastBook) {\n     lastWinner = lastBook.winningPlayer\n  }\n  if (lastWinner === \"player2\") {\n    order =  [\"player2\", \"player3\", \"player4\", \"player1\"];\n  } else if (lastWinner === \"player3\") {\n    order = [\"player3\", \"player4\", \"player1\", \"player2\"];\n  } else if (lastWinner === \"player4\") {\n    order = [\"player4\", \"player1\", \"player2\", \"player3\"];\n  } else if (lastWinner === \"player1\") {\n    order = [\"player1\", \"player2\", \"player3\", \"player4\"];\n  } else { \n    order = roundOrder;\n  }\n  return order\n}","import { useState } from \"react\";\n\nconst SelectSuit = ({ highBidder, sendTrumpSuit }) => {\n    const [trumpSuit, setTrumpSuit] = useState(\"Hearts\");\n\n    const handleSuitSubmit = (e) => {\n        e.preventDefault();\n        sendTrumpSuit(trumpSuit)\n    };\n\n    return (\n        <div>\n            {highBidder === \"player1\" &&\n                <div>\n                    <form onSubmit={handleSuitSubmit}>\n                        <select\n                            value={trumpSuit}\n                            onChange={(e) => setTrumpSuit(e.target.value)}>\n                            <option value=\"Hearts\">Hearts</option>\n                            <option value=\"Diamonds\">Diamonds</option>\n                            <option value=\"Spades\">Spades</option>\n                            <option value=\"Clubs\">Clubs</option>\n                        </select>\n                        <button>Select Suit</button>\n                    </form>\n                </div>}\n        </div>)\n}\n\nexport default SelectSuit;","import { useState } from \"react\";\nimport \"./index.css\";\nimport { getNewCards } from \"./scripts\";\nimport useFetch from \"./useFetch\";\n\nconst Discard = ({ deckUrl, player, sendDiscardData }) => {\n  const [discard0, setDiscard0] = useState(false);\n  const [discard1, setDiscard1] = useState(false);\n  const [discard2, setDiscard2] = useState(false);\n  const [discard3, setDiscard3] = useState(false);\n  const [discard4, setDiscard4] = useState(false);\n\n  const { data, isPending, error } = useFetch(\n    deckUrl + \"/pile/\" + player + \"/list/\"\n  );\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const discards = [discard0, discard1, discard2, discard3, discard4];\n    var discardCodes = [];\n    for (let i = 0; i < 5; i++) {\n      discards[i] && discardCodes.push(data.piles[player].cards[i].code);\n    }\n    getNewCards(deckUrl, discardCodes, player, sendDiscardData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"discardHand\">\n        <input\n          type=\"checkbox\"\n          name=\"card0\"\n          onChange={(e) => setDiscard0(e.target.checked)}\n          checked={discard0}\n          className=\"dischardCheckBox\"\n        ></input>\n        <input\n          type=\"checkbox\"\n          name=\"card1\"\n          onChange={(e) => setDiscard1(e.target.checked)}\n          checked={discard1}\n        ></input>\n        <input\n          type=\"checkbox\"\n          name=\"card2\"\n          onClick={(e) => setDiscard2(e.target.checked)}\n          checked={discard2}\n        ></input>\n        <input\n          type=\"checkbox\"\n          name=\"card3\"\n          onChange={(e) => setDiscard3(e.target.checked)}\n          checked={discard3}\n        ></input>\n        <input\n          type=\"checkbox\"\n          name=\"card4\"\n          onChange={(e) => setDiscard4(e.target.checked)}\n          checked={discard4}\n        ></input>\n      </div>\n      <button>Discard Selected</button>\n    </form>\n  );\n};\n\nexport default Discard;\n","/** Display of bid information found on the discard and play views\n * @param  {Object} {bidData object of data related ot the bid\n * @param  {String} suit} Trump suit\n * @param  {Int} \n */\nconst BidInfo = ({ bidData, suit, book }) => {\n\n    var bid = bidData.highBid.highBid\n    var bidder = bidData.highBidder.highBidder\n\n    return (\n        <div>\n            {!suit && <h3>{(bid + \" from \" + bidder + \" in...\")}</h3>}\n            {suit && <h3>{(bid + \" from \" + bidder + \" in \" + suit)}</h3>}\n            {book && <h4>Book: {book} </h4>}\n        </div>\n    );\n}\n\nexport default BidInfo;","const PlayCard = ({ card }) => {\n\n    return (\n        <div>\n            <img src={card.image} alt=\"Card\" width=\"100%\" height=\"100%\" />\n        </div>\n\n    );\n}\n\nexport default PlayCard;","import { useState } from \"react\";\nimport useFetch from \"../useFetch\";\nimport { playCardNow } from \"../scripts\";\n\nconst PlayerTurn = ({\n  deckUrl,\n  player,\n  position,\n  leadSuit,\n  sendPlayCard,\n  trumpSuit,\n}) => {\n  const [playerCard, setPlayerCard] = useState(0);\n\n  const url = deckUrl + \"/pile/\" + player + \"/list/\";\n  const { data, error, isPending } = useFetch(url);\n\n  var cards = [];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(\"nachos\", playerCard, e);\n    playCardNow(deckUrl, cards[playerCard], sendPlayCard);\n  };\n\n  // console.log(sendPlayCard)\n  if (data) {\n    cards = data.piles[player].cards;\n  }\n\n//   if (cards[0] && !playerCard) {\n//     // setPlayerCard(cards[0]);\n//     setPlayerCard(0);\n//   }\n\n  // console.log(\"PC\",playerCard)\n  return (\n    <div>\n      {data && (\n        <form onSubmit={handleSubmit}>\n          <select\n            value={playerCard}\n            onChange={(e) => setPlayerCard(e.target.value)}\n          >\n            {cards[0] && <option value={0}>{cards[0].code}</option>}\n            {cards[1] && <option value={1}>{cards[1].code}</option>}\n            {cards[2] && <option value={2}>{cards[2].code}</option>}\n            {cards[3] && <option value={3}>{cards[3].code}</option>}\n            {cards[4] && <option value={4}>{cards[4].code}</option>}\n          </select>\n          <button>Play Card</button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default PlayerTurn;\n","import { useState } from \"react\";\nimport { getBestCard, getWorstCard } from \"../scripts\";\nimport useFetch from \"../useFetch\";\n\nconst Turn = ({ deckUrl, player, position, leadSuit, sendPlayCard, trumpSuit }) => {\n\n    const url = deckUrl + \"/pile/\" + player + \"/list/\";\n    const { data, error, isPending } = useFetch(url);\n    const [cardPlay,setCardPlay] = useState(null);\n\n    var cards = [];\n\n    if (data && !cardPlay) {\n        cards = data.piles[player].cards;\n        var taco = playCard(position, cards, trumpSuit);\n        \n        fetch(deckUrl + \"/pile/discard/add/?cards=\" + taco.code)\n            .then(res => {\n                if (!res.ok) {\n                    throw Error('Could not fetch data for that resource');\n                }\n                return res.json();\n            })\n            .then(data => {\n                setCardPlay(taco)\n            });\n    }\n\n    if (data && cardPlay) {\n        sendPlayCard(cardPlay)\n    }\n\n    return (\n        <div>\n            {error && <div>{error}</div>}\n            {isPending && <div>Thinking....</div>}\n            {data && <div>Dawn</div>};\n        </div>\n    )\n}\n\nexport default Turn;\n\nfunction playCard(position, cards, trumpSuit) {\n    var card;\n    switch (position) {\n        case 1:\n            card = getWorstCard(cards, trumpSuit);\n            break;\n        case 2:\n            card = getWorstCard(cards, trumpSuit);\n            break;\n        case 3:\n            card = getBestCard(cards, trumpSuit);\n            break;\n        case 4:\n            card = getBestCard(cards, trumpSuit);\n            break;\n        default:\n            console.log(\"defaultHit\")\n\n    }\n    return card\n}","import { useState } from \"react\";\nimport { getCardValue } from \"../cardValues\";\nimport { getBookOrder } from \"../deckFuncs\";\nimport PlayCard from \"./PlayCard\";\nimport PlayerTurn from \"./PlayerTurn\";\nimport Turn from \"./Turn\";\n\nconst Play = ({ deckUrl, player, order, sendBookInfo, book, trumpSuit, bookInfo }) => {\n  const [playCard1, setPlayCard1] = useState(\"\");\n  const [playCard2, setPlayCard2] = useState(\"\");\n  const [playCard3, setPlayCard3] = useState(\"\");\n  const [playCard4, setPlayCard4] = useState(\"\");\n  const [leadSuit, setLeadSuit] = useState(\"\");\n  const [turn, setTurn] = useState(1);\n\n  var winner;\n\n  let bookNum = book;\n  let bookOrder = getBookOrder(bookInfo,order)\n  if (turn === 1 && playCard1) {\n    let guac = playCard1.code.charAt(1);\n    setLeadSuit(guac);\n    setTurn(2);\n  } else if (turn === 2 && playCard2) {\n    setTurn(3);\n  } else if (turn === 3 && playCard3) {\n    setTurn(4);\n  } else if (turn === 4 && playCard4) {\n    setTimeout(()=> {\n       setTurn(5);\n      },2000);\n  } else if (turn === 5) {\n    book = [playCard1, playCard2, playCard3, playCard4];\n    let curBestValue = 50;\n    for (let i = 0; i < book.length; i++) {\n      let val = getCardValue(book[i].code, trumpSuit);\n      if (val < curBestValue) {\n        curBestValue = val;\n        winner = i;\n      }\n    }\n    let highCard = book[winner].code;\n    let winningPlayer = bookOrder[winner]\n    let tempLog = { bookNum, winningPlayer, highCard };\n    sendBookInfo(tempLog);\n  }\n\n  function whoseTurn(val, sendPlayCard) {\n    // want to check whose turn it is to decide which card to render\n    // right now everything is set to work on RoundOrder and there's only one player\n    // need to checkPlayerPosition = Turn and then render the PlayerTurn instead of CpuTurn\n    //\n    // console.log(val,order[val-1])\n    if (checkPlayerPosition(player, bookOrder) === val) {\n      return (\n        <PlayerTurn\n          deckUrl={deckUrl}\n          player={player}\n          position={val}\n          sendPlayCard={sendPlayCard}\n          trumpSuit={trumpSuit}\n          leadSuit={leadSuit}\n        />\n      );\n    } else {\n      return (\n        <Turn\n          deckUrl={deckUrl}\n          player={bookOrder[val-1]}\n          position={val}\n          sendPlayCard={sendPlayCard}\n          trumpSuit={trumpSuit}\n        />\n      );\n    }\n  }\n\n  function DisplayLog() {\n    let x = [];\n    \n    for (book of bookInfo) {\n      x.push(<div>{book.bookNum}: {`${book.winningPlayer === \"player1\" || book.winningPlayer === \"player3\" ? \"Team 1\" : \"Team 2\"}`} {book.highCard} {book.winningPlayer}</div>)\n    }\n    \n    return <div>{x}</div>\n\n  }\n\n  return (\n    <div>\n      <div className=\"hand\">\n      {turn > 0 && !playCard1 && whoseTurn(1, setPlayCard1)}\n      {turn > 1 && !playCard2 && whoseTurn(2, setPlayCard2)}        \n      {turn > 2 && !playCard3 && whoseTurn(3, setPlayCard3)}        \n      {turn > 3 && !playCard4 && whoseTurn(4, setPlayCard4)}  \n      {turn === 4 && playCard4 && <div>Napkins on the table!</div>}                    \n\n        {playCard1 && <PlayCard card={playCard1} />}\n        {playCard2 && <PlayCard card={playCard2} />}\n        {playCard3 && <PlayCard card={playCard3} />}\n        {playCard4 && <PlayCard card={playCard4} />}\n      </div>\n    { bookInfo && DisplayLog()}\n    </div>\n\n  );\n};\n\nexport default Play;\n\n/** finds the human players position\n * @param  {String} player handle of the player (fixed to \"player1\" ATM)\n * @param  {Array} order order of players (currently fixed to roundOrder)\n */\nexport function checkPlayerPosition(player, order) {\n  let num = order.indexOf(player) + 1;\n  return num;\n}\n","import { useEffect, useState } from \"react\";\n// import useFetch from \"./useFetch\";\nimport Hand from \"./Hand\";\nimport Bid from \"./Bid\";\nimport { dealHands } from \"./deckFuncs\";\nimport SelectSuit from \"./SelectSuit\";\nimport Discard from \"./Discard\";\nimport BidInfo from \"./BidInfo\";\nimport Play from \"./Play/Play\";\nimport { getCardValue } from \"./cardValues\";\n\nconst Round = ({ deckUrl, round, sendRoundScore, newRound }) => {\n  const [hands, setHands] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [bidData, setBidData] = useState(\"\");\n  const [stage, setStage] = useState(\"Deal\");\n  const [trumpSuit, setTrumpSuit] = useState(\"\");\n  const [discardData, setDiscardData] = useState(\"\");\n  const [bookInfo, setBookInfo] = useState(null);\n  const [bookNum, setBookNum] = useState(1);\n  const [log, setLog] = useState([]);\n  const [turnOrder, setTurnOrder] = useState([]);\n  const [roundOrder, setRoundOrder] = useState(null);\n\n  const order = [\"player1\", \"player2\", \"player3\", \"player4\"];\n\n  // TODO look into a way to reset states without having todo this...\n  if (newRound && stage === \"Over\") {\n    setHands(null);\n    setIsPending(true);\n    setBidData(\"\");\n    setStage(\"Deal\");\n    setTrumpSuit(\"\");\n    setDiscardData(\"\");\n    setBookInfo(null);\n    setBookNum(1);\n    setLog([]);\n    setRoundOrder(null)\n    console.log(\"wipe\");\n  }\n\n  const player = \"player1\";\n  const dealer = order[(round - 1) % 4];\n  \n  useEffect(() => {\n    dealHands(deckUrl, round, setIsPending, setHands, setRoundOrder);\n  }, [deckUrl, round]);\n\n  if (deckUrl && stage === \"Deal\" && !isPending) {\n    setStage(\"Bid\");\n  }\n\n  if (bidData && stage === \"Bid\" && !isPending) {\n    setStage(\"SuitSelect\");\n  }\n\n  if (trumpSuit && stage === \"SuitSelect\") {\n    setStage(\"Discard\");\n  }\n\n  if (discardData && stage === \"Discard\") {\n    setStage(\"Play\");\n  }\n\n  if (bookInfo) {\n    log[bookNum - 1] = bookInfo;\n    setLog(log);\n    setBookInfo(\"\");\n    setBookNum(bookNum + 1);\n  }\n\n  if (stage === \"Play\" && log.length === 5) {\n    setStage(\"Winner\");\n    setBookNum(0);\n  }\n\n  let team1BookCount = 0;\n  let team2BookCount = 0;\n\n  if (stage === \"Winner\") {\n    let highCard = 50;\n    let highCardWinner = null;\n\n    for (let x = 0; x < 5; x++) {\n      if (log[x].winningPlayer === \"player1\" || log[x].winningPlayer === \"player3\") {\n        team1BookCount += 1;\n      } else {\n        team2BookCount += 1;\n      }\n      let cardValue = getCardValue(log[x].highCard, trumpSuit);\n      if (highCard > cardValue) {\n        highCard = cardValue;\n        highCardWinner = log[x].winningPlayer;\n      }\n    }\n    if (highCardWinner === \"player1\" || highCardWinner === \"player3\") {\n      team1BookCount += 1;\n    } else {\n      team2BookCount += 1;\n    }\n\n    if (team1BookCount === 6) {\n      team1BookCount = 9;\n    }\n\n    if (team2BookCount === 6) {\n      team2BookCount = 9;\n    }\n  }\n\n  return (\n    <div className=\"content\">\n      {stage === \"Deal\" && isPending && <div>Dealing....</div>}\n      {/* {console.log(\"bida\", stage, hands)} */}\n      {stage === \"Bid\" && hands && roundOrder && (\n        <div>\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <Bid\n            hands={hands}\n            order={roundOrder}\n            dealer={dealer}\n            sendBidData={setBidData}\n          />\n        </div>\n      )}\n      {stage === \"SuitSelect\" && (\n        <div>\n          <BidInfo bidData={bidData} />\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <SelectSuit\n            highBidder={bidData.highBidder.highBidder}\n            sendTrumpSuit={setTrumpSuit}\n          />\n        </div>\n      )}\n      {stage === \"Discard\" && (\n        <div>\n          <BidInfo bidData={bidData} suit={trumpSuit} />\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <Discard\n            deckUrl={deckUrl}\n            player={player}\n            sendDiscardData={setDiscardData}\n          />\n        </div>\n      )}\n      {stage === \"Redraw\" && (\n        <div>\n          <BidInfo bidData={bidData} suit={trumpSuit} />\n          <div>{discardData.toString()}</div>\n        </div>\n      )}\n      {stage === \"Play\" && bookNum === 1 && (\n        <div>\n          <BidInfo bidData={bidData} suit={trumpSuit} book={bookNum} />\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <Play\n            deckUrl={deckUrl}\n            player={player}\n            order={roundOrder}\n            sendBookInfo={setBookInfo}\n            book={bookNum}\n            trumpSuit={trumpSuit}\n            bookInfo={log}\n          />\n        </div>\n      )}\n      {stage === \"Play\" && bookNum === 2 && (\n        <div>\n          <BidInfo bidData={bidData} suit={trumpSuit} book={bookNum} />\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <Play\n            deckUrl={deckUrl}\n            player={player}\n            order={roundOrder}\n            sendBookInfo={setBookInfo}\n            book={bookNum}\n            trumpSuit={trumpSuit}\n            bookInfo={log}\n          />\n        </div>\n      )}\n      {stage === \"Play\" && bookNum === 3 && (\n        <div>\n          <BidInfo bidData={bidData} suit={trumpSuit} book={bookNum} />\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <Play\n            deckUrl={deckUrl}\n            player={player}\n            order={roundOrder}\n            sendBookInfo={setBookInfo}\n            book={bookNum}\n            trumpSuit={trumpSuit}\n            bookInfo={log}\n          />\n        </div>\n      )}\n      {stage === \"Play\" && bookNum === 4 && (\n        <div>\n          <BidInfo bidData={bidData} suit={trumpSuit} book={bookNum} />\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <Play\n            deckUrl={deckUrl}\n            player={player}\n            order={roundOrder}\n            sendBookInfo={setBookInfo}\n            book={bookNum}\n            trumpSuit={trumpSuit}\n            bookInfo={log}\n          />\n        </div>\n      )}\n\n      {stage === \"Play\" && bookNum === 5 && (\n        <div>\n          <BidInfo bidData={bidData} suit={trumpSuit} book={bookNum} />\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <Play\n            deckUrl={deckUrl}\n            player={player}\n            order={roundOrder}\n            sendBookInfo={setBookInfo}\n            book={bookNum}\n            trumpSuit={trumpSuit}\n            bookInfo={log}\n          />\n        </div>\n      )}\n\n      {stage === \"Winner\" && (\n        <div>\n          <BidInfo bidData={bidData} suit={trumpSuit} book={bookNum} />\n          <div>Round Over! </div>\n          <div>Team 1: {team1BookCount}</div>\n          <div>Team 2: {team2BookCount}</div>\n          <button\n            onClick={() => {\n              sendRoundScore([team1BookCount, team2BookCount]);\n              setStage(\"Over\");\n            }}\n          >\n            Next Round\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Round;\n","import { useState } from \"react\";\nimport Score from \"./Score/Score\";\nimport Round from \"./Round\";\nimport useFetch from \"./useFetch\";\nimport { getFreshDeck } from \"./deckFuncs\";\n\nconst Game = () => {\n  const { data, isPending, error } = useFetch(\n    \"https://deckofcardsapi.com/api/deck/new/\"\n  );\n\n  const [round, setRound] = useState(1);\n  const [gameScore, setGameScore] = useState([0, 0]);\n  const [roundScore, setRoundScore] = useState(null);\n  const [scoreLog, setScoreLog] = useState([]);\n\n  let deckUrl = null;\n  if (data) {\n    deckUrl = \"https://deckofcardsapi.com/api/deck/\" + data.deck_id;\n  }\n\n  let tempScore = [];\n\n  if (roundScore) {\n    scoreLog[round] = roundScore;\n    tempScore[0] = gameScore[0] + roundScore[0];\n    tempScore[1] = gameScore[1] + roundScore[1];\n    console.log(\"scoring\", tempScore, roundScore, round);\n    setScoreLog(scoreLog);\n    setGameScore(tempScore);\n    setRoundScore(null);\n    setRound(round + 1);\n  }\n\n  return (\n    <div>\n      {isPending && <div>Setting up...</div>}\n      {error && <div>{error}</div>}\n      {deckUrl && (\n        <div className=\"game\">\n          <Score round={round} gameScore={gameScore} />\n          <Round\n            deckUrl={deckUrl}\n            round={round}\n            sendRoundScore={setRoundScore}\n            newRound={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n","import { useState } from 'react';\nimport './App.css';\nimport Game from './Game';\n\nfunction App() {\n  const [inGame, setInGame] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h2>45s</h2>\n      { inGame===false && <button onClick={() => setInGame(true)}>Start Game</button>}\n      { inGame && <Game />}\n       \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}