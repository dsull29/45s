{"version":3,"sources":["Score.js","useFetch.js","Card.js","Hand.js","cardValues.js","scripts.js","Bid.js","SelectSuit.js","Discard.js","BidInfo.js","PlayCard.js","PlayerTurn.js","Turn.js","Play.js","Round.js","deckFuncs.js","Game.js","App.js","index.js"],"names":["Score","scoreLog","className","style","textAlign","team1Score","team2Score","roundNum","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Card","card","src","image","alt","width","height","Hand","deckUrl","player","round","cards","piles","trumpValues","offSuitValues","heartTrumpOrder","diamondTrumpOrder","spadesTrumpOrder","clubsTrumpOrder","heartOffSuitOrder","diamondOffSuitOrder","spadesOffSuitOrder","clubsOffSuitOrder","evaluateHand","heartHandVal","diamondHandVal","spadeHandVal","clubHandVal","i","getHeartValue","getDiamondValue","getSpadeValue","getClubValue","getCardValue","trump","indexOf","getBid","handValues","bestHandVal","sort","a","b","playerBid","getWorstCard","worstCard","worstCardVal","length","curCardVal","code","getBestCard","bestCard","bestCardVal","discardCodes","sendDiscardData","discard","discardData","redrawCount","remaining","redraw","redrawData","push","assign","toString","response","count","playerCard","sendPlayerCard","Bid","hands","order","dealer","sendBidData","playerBidded","setPlayerBidded","setPlayerBid","highBid","setHighBid","highBidder","setHighBidder","isDealer","bidRes","bidders","bestBid","bidding","onSubmit","e","preventDefault","value","onChange","target","SelectSuit","sendTrumpSuit","trumpSuit","setTrumpSuit","Discard","discard0","setDiscard0","discard1","setDiscard1","discard2","setDiscard2","discard3","setDiscard3","discard4","setDiscard4","discards","getNewCards","type","checked","onClick","BidInfo","bidData","suit","book","bid","bidder","PlayCard","PlayerTurn","sendPlayCard","position","leadSuit","setPlayerCard","playCardNow","Turn","cardPlay","setCardPlay","taco","playCard","Play","winner","sendBookInfo","playCard1","setPlayCard1","playCard2","setPlayCard2","playCard3","setPlayCard3","playCard4","setPlayCard4","setLeadSuit","turn","setTurn","charAt","curBestValue","val","highCard","Round","sendScoreLog","setHands","setBidData","stage","setStage","setDiscardData","bookInfo","setBookInfo","bookNum","setBookNum","roundLog","setRoundLog","deck_id","turnOrder","getTurnOrder","handRes","Promise","reject","Game","setScoreLog","App","inGame","setInGame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAUeA,EAVD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEf,OACE,qBAAKC,UAAU,aAAaC,MAAO,CAAEC,UAAW,QAAhD,SACE,qBAAKF,UAAU,QAAf,SAAuB,+BAAM,0CAAaD,EAASI,WAAtB,cAA6CJ,EAASK,WAAtD,YAA2EL,EAASM,SAAW,YC6BnHC,EA/BE,SAACC,GACd,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAyBA,OAxBAC,qBAAU,WACN,IAAMC,EAAY,IAAIC,gBAqBtB,OApBAC,MAAMX,EAAK,CAAEY,OAAQH,EAAUG,SAC1BC,MAAK,SAAAC,GACF,IAAKA,EAAIC,GACL,MAAMC,MAAM,0CAEhB,OAAOF,EAAIG,UAEdJ,MAAK,SAAAX,GACFC,EAAQD,GACRG,GAAa,GACbE,EAAS,SAEZW,OAAM,SAAAC,GACc,eAAbA,EAAIC,KACJC,QAAQC,IAAI,kBAEZjB,GAAa,GACbE,EAASY,EAAII,aAGlB,kBAAMd,EAAUe,WACxB,CAACxB,IACG,CAAEE,OAAME,YAAWE,UCpBfmB,EAVF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEZ,OACI,8BACI,qBAAKC,IAAKD,EAAKE,MAAOC,IAAI,OAAOC,MAAM,OAAOC,OAAO,YC2BlDC,EA5BF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAE7B,EAAmCpC,EAASkC,EAAU,SAAWC,EAAS,UAAlEhC,EAAR,EAAQA,KAAME,EAAd,EAAcA,UAAWE,EAAzB,EAAyBA,MAErB8B,EAAQ,GAKZ,OAJIlC,GAAQA,EAAKmC,MAAMH,IAAWhC,EAAKmC,MAAMH,GAAQE,QACjDA,EAAQlC,EAAKmC,MAAMH,GAAQE,OAK3B,gCACK9B,GAAS,8BAAMA,IACfF,GAAa,6CACbF,GAAQkC,GACL,8BACI,sBAAK3C,UAAU,OAAf,UACK2C,EAAM,IAAM,cAAC,EAAD,CAAMV,KAAMU,EAAM,GAAID,MAAOA,IACzCC,EAAM,IAAM,cAAC,EAAD,CAAMV,KAAMU,EAAM,GAAID,MAAOA,IACzCC,EAAM,IAAM,cAAC,EAAD,CAAMV,KAAMU,EAAM,GAAID,MAAOA,IACzCC,EAAM,IAAM,cAAC,EAAD,CAAMV,KAAMU,EAAM,GAAID,MAAOA,IACzCC,EAAM,IAAM,cAAC,EAAD,CAAMV,KAAMU,EAAM,GAAID,MAAOA,a,uBCxB5DG,EAAc,EACf,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAE3DC,EAAgB,CAAC,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAK5DC,EAAkB,CACtB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEIC,EAAoB,CACxB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEIC,EAAmB,CACvB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEIC,EAAkB,CACtB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAGIC,EAAoB,CACxB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEIC,EAAsB,CAC1B,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEIC,EAAqB,CACzB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEIC,EAAoB,CACxB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAGK,SAASC,EAAaZ,GAC3B,IAAIa,EAAcC,EAAgBC,EAAcC,EAChDH,EAAeC,EAAiBC,EAAeC,EAAc,EAE7D,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAI3B,EAAOU,EAAMiB,GACjBJ,GAAg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","file":"static/js/main.48591215.chunk.js","sourcesContent":["const Score = ({ scoreLog }) => {\n\n  return (\n    <div className=\"scoreboard\" style={{ textAlign: \"left\" }}>\n      <div className=\"score\"><span><h3>Team 1: {scoreLog.team1Score} | Team 2: {scoreLog.team2Score} | Round {scoreLog.roundNum + 1}</h3></span></div>\n    </div>\n\n  );\n}\n\nexport default Score;","import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        const abortCont = new AbortController();\n        fetch(url, { signal: abortCont.signal })\n            .then(res => {\n                if (!res.ok) {\n                    throw Error('Could not fetch data for that resource');\n                }\n                return res.json();\n            })\n            .then(data => {\n                setData(data);\n                setIsPending(false);\n                setError(null);\n            })\n            .catch(err => {\n                if (err.name === \"AbortError\") {\n                    console.log('fetch aborted')\n                } else {\n                    setIsPending(false);\n                    setError(err.message);\n                }\n            })\n        return () => abortCont.abort();\n    }, [url]);\n    return { data, isPending, error }\n}\n\nexport default useFetch;","const Card = ({ card }) => {\n\n    return (\n        <div>\n            <img src={card.image} alt=\"Card\" width=\"100%\" height=\"100%\" />\n        </div>\n\n    );\n}\n\nexport default Card;","import useFetch from './useFetch';\nimport Card from './Card';\n\nconst Hand = ({ deckUrl, player, round }) => {\n\n    const { data, isPending, error } = useFetch(deckUrl + \"/pile/\" + player + \"/list/\")\n\n    var cards = [];\n    if (data && data.piles[player] && data.piles[player].cards) {\n        cards = data.piles[player].cards;\n    }\n\n    return (\n\n        <div>\n            {error && <div>{error}</div>}\n            {isPending && <div>Loading...</div>}\n            {data && cards &&\n                <div>\n                    <div className=\"hand\">\n                        {cards[0] && <Card card={cards[0]} round={round} />}\n                        {cards[1] && <Card card={cards[1]} round={round} />}\n                        {cards[2] && <Card card={cards[2]} round={round} />}\n                        {cards[3] && <Card card={cards[3]} round={round} />}\n                        {cards[4] && <Card card={cards[4]} round={round} />}\n                    </div>\n                </div>}\n        </div>\n    );\n}\n\nexport default Hand;\n","const trumpValues = [\n    -35, -21, -18, -13, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1,\n  ];\n  const offSuitValues = [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0];\n  const offSuitValuesNonLead = [\n    27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14,\n  ];\n  \n  const heartTrumpOrder = [\n    \"5H\",\n    \"JH\",\n    \"AH\",\n    \"KH\",\n    \"QH\",\n    \"0H\",\n    \"9H\",\n    \"8H\",\n    \"7H\",\n    \"6H\",\n    \"4H\",\n    \"3H\",\n    \"2H\",\n  ];\n  const diamondTrumpOrder = [\n    \"5D\",\n    \"JD\",\n    \"AH\",\n    \"AD\",\n    \"KD\",\n    \"QD\",\n    \"0D\",\n    \"9D\",\n    \"8D\",\n    \"7D\",\n    \"6D\",\n    \"4D\",\n    \"3D\",\n    \"2D\",\n  ];\n  const spadesTrumpOrder = [\n    \"5S\",\n    \"JS\",\n    \"AH\",\n    \"AS\",\n    \"KS\",\n    \"QS\",\n    \"2S\",\n    \"3S\",\n    \"4S\",\n    \"6S\",\n    \"7S\",\n    \"8S\",\n    \"9S\",\n    \"0S\",\n  ];\n  const clubsTrumpOrder = [\n    \"5C\",\n    \"JC\",\n    \"AH\",\n    \"AC\",\n    \"KC\",\n    \"QC\",\n    \"2C\",\n    \"3C\",\n    \"4C\",\n    \"6C\",\n    \"7C\",\n    \"8C\",\n    \"9C\",\n    \"0C\",\n  ];\n  \n  const heartOffSuitOrder = [\n    \"2H\",\n    \"3H\",\n    \"4H\",\n    \"5H\",\n    \"6H\",\n    \"7H\",\n    \"8H\",\n    \"9H\",\n    \"0H\",\n    \"JH\",\n    \"QH\",\n    \"KH\",\n  ];\n  const diamondOffSuitOrder = [\n    \"AD\",\n    \"2D\",\n    \"3D\",\n    \"4D\",\n    \"5D\",\n    \"6D\",\n    \"7D\",\n    \"8D\",\n    \"9D\",\n    \"0D\",\n    \"JD\",\n    \"QD\",\n    \"KD\",\n  ];\n  const spadesOffSuitOrder = [\n    \"0S\",\n    \"9S\",\n    \"8S\",\n    \"7S\",\n    \"6S\",\n    \"5S\",\n    \"4S\",\n    \"3S\",\n    \"2S\",\n    \"AS\",\n    \"JS\",\n    \"QS\",\n    \"KS\",\n  ];\n  const clubsOffSuitOrder = [\n    \"0C\",\n    \"9C\",\n    \"8C\",\n    \"7C\",\n    \"6C\",\n    \"5C\",\n    \"4C\",\n    \"3C\",\n    \"2C\",\n    \"AC\",\n    \"JC\",\n    \"QC\",\n    \"KC\",\n  ];\n\n  export function evaluateHand(cards) {\n    let heartHandVal, diamondHandVal, spadeHandVal, clubHandVal;\n    heartHandVal = diamondHandVal = spadeHandVal = clubHandVal = 0;\n  \n    for (let i = 0; i < 5; i++) {\n      var card = cards[i];\n      heartHandVal += getHeartValue(card);\n      diamondHandVal += getDiamondValue(card);\n      spadeHandVal += getSpadeValue(card);\n      clubHandVal += getClubValue(card);\n    }\n  \n    return [heartHandVal, diamondHandVal, spadeHandVal, clubHandVal];\n  }\n  \n  export function getCardValue(card, trump) {\n    switch (trump) {\n      case \"Hearts\":\n        return getHeartValue(card);\n      case \"Diamonds\":\n        return getDiamondValue(card);\n      case \"Spades\":\n        return getSpadeValue(card);\n      case \"Clubs\":\n        return getClubValue(card);\n      default:\n        return 0;\n    }\n  }\n  \n  function getHeartValue(card) {\n    return (\n      trumpValues[heartTrumpOrder.indexOf(card)] ||\n      offSuitValues[diamondOffSuitOrder.indexOf(card)] ||\n      offSuitValues[clubsOffSuitOrder.indexOf(card)] ||\n      offSuitValues[spadesOffSuitOrder.indexOf(card)]\n    );\n  }\n  \n  function getDiamondValue(card) {\n    return (\n      trumpValues[diamondTrumpOrder.indexOf(card)] ||\n      offSuitValues[heartOffSuitOrder.indexOf(card)] ||\n      offSuitValues[clubsOffSuitOrder.indexOf(card)] ||\n      offSuitValues[spadesOffSuitOrder.indexOf(card)]\n    );\n  }\n  \n  function getSpadeValue(card) {\n    return (\n      trumpValues[spadesTrumpOrder.indexOf(card)] ||\n      offSuitValues[diamondOffSuitOrder.indexOf(card)] ||\n      offSuitValues[clubsOffSuitOrder.indexOf(card)] ||\n      offSuitValues[heartOffSuitOrder.indexOf(card)]\n    );\n  }\n  \n  function getClubValue(card) {\n    return (\n      trumpValues[clubsTrumpOrder.indexOf(card)] ||\n      offSuitValues[diamondOffSuitOrder.indexOf(card)] ||\n      offSuitValues[heartOffSuitOrder.indexOf(card)] ||\n      offSuitValues[spadesOffSuitOrder.indexOf(card)]\n    );\n  }","import { getCardValue, evaluateHand } from \"./cardValues\";\n\nexport function getDealer(dealers) {\n  let order = dealers;\n  let dealer = order.shift();\n  // TODO fix the order here\n  order.push(dealer);\n  return { dealer, order };\n}\n\nexport function bidding(cards, bidders) {\n  let bestBid, highBidder;\n  var highBid = 0;\n  for (let i = 0; i < 3; i++) {\n    bestBid = getBid(evaluateHand(cards[i]));\n    if (bestBid > highBid) {\n      highBid = bestBid;\n      highBidder = bidders[i];\n    }\n  }\n  return { highBid, highBidder };\n}\n\nfunction getBid(handValues) {\n  var bestHandVal = handValues.sort(function (a, b) {\n    return a - b;\n  })[0];\n  var playerBid = null;\n  if (bestHandVal < 0 - 25) {\n    playerBid = \"20\";\n  } else if (bestHandVal < 0 - 5) {\n    playerBid = \"15\";\n  }\n  return playerBid;\n}\n\nexport function getWorstCard(cards, trump) {\n  var worstCard = null;\n  var worstCardVal = 0 - 50;\n\n  for (let i = 0; i < cards.length; i++) {\n    var curCardVal = getCardValue(cards[i].code, trump);\n    if (curCardVal > worstCardVal) {\n      worstCardVal = curCardVal;\n      worstCard = i;\n    }\n  }\n  return cards[worstCard];\n}\n\nexport function getBestCard(cards, trump) {\n  var bestCard = null;\n  var bestCardVal = 50;\n\n  for (let i = 0; i < cards.length; i++) {\n    var curCardVal = getCardValue(cards[i].code, trump);\n    if (curCardVal < bestCardVal) {\n      bestCardVal = curCardVal;\n      bestCard = i;\n    }\n  }\n\n  return cards[bestCard];\n}\n\nexport function getPlayerHand(url, player) {\n  var tempData;\n\n  const playerHand = fetch(url)\n    .then((res) => {\n      if (!res.ok) {\n        throw Error(\"Could not fetch data for that resource\");\n      }\n      return res.json();\n    })\n    .then((data) => {\n    });\n  playerHand.then((data) => {\n    return data;\n    // let cards = data.piles[player].cards\n    // let codes = []\n    // let tempData = null\n    // for (let i = 0; i < cards.length; i++) {\n    //     codes.push(cards[i].code)\n    // }\n    // tempData = {\n    //     player: player,\n    //     cards,\n    //     codes\n    // }\n    // return tempData\n  });\n\n  return tempData;\n}\n\n/** Handles discarding, drawing new cards, and assigning that number of cards to the player\n * @param  {String} deckUrl URL of the deck being used for this round\n * @param  {Array} discardCodes Card codes to discard\n * @param  {String} player Player whose hand is being worked\n * @param  {Function} sendDiscardData Callback function to 'Play' to signify the process is done\n */\nexport async function getNewCards(\n  deckUrl,\n  discardCodes,\n  player,\n  sendDiscardData\n) {\n  const discardData = await discard(deckUrl, discardCodes);\n\n  const redrawCount = 5 - discardData.piles[player].remaining;\n  const redrawData = await redraw(deckUrl, redrawCount);\n\n  let cards = [];\n  if (redrawData.cards) {\n    for (let i = 0; i < redrawData.cards.length; i++)\n      cards.push(redrawData.cards[i].code);\n  }\n\n  await assign(deckUrl, player, cards);\n\n  sendDiscardData(true);\n}\n\nasync function discard(deckUrl, discardCodes) {\n  const response = await fetch(\n    deckUrl + \"/pile/discard/add/?cards=\" + discardCodes.toString()\n  )\n    .then((res) => {\n      if (!res.ok) {\n        throw Error(\"Could not fetch data for that resource\");\n      }\n      return res.json();\n    })\n    .then((data) => {\n      return data;\n    });\n  return response;\n}\n\n/**\n * Draw a number of cards from the deck\n * @param  {String} deckUrl URL to the deck where cards will be drawn form\n * @param  {Int} count\n * @return response data\n */\nasync function redraw(deckUrl, count) {\n  const response = await fetch(deckUrl + \"/draw/?count=\" + count)\n    .then((res) => {\n      if (!res.ok) {\n        throw Error(\"Could not fetch data for that resource\");\n      }\n      return res.json();\n    })\n    .then((data) => {\n      return data;\n    });\n  return response;\n}\n\n/** Assign cards to the players pile\n * @param  {String} deckUrl URL to the deck where the cards will be assigned\n * @param  {String} player Player pile to assign the cards to\n * @param  {Array} cards List of cards to assign to the pile\n * @return fetch response data\n */\nasync function assign(deckUrl, player, cards) {\n  const response = await fetch(\n    deckUrl + \"/pile/\" + player + \"/add/?cards=\" + cards.toString()\n  )\n    .then((res) => {\n      if (!res.ok) {\n        throw Error(\"Could not fetch data for that resource\");\n      }\n      return res.json();\n    })\n    .then((data) => {\n      return data;\n    });\n  return response;\n}\n/** Moves the player's selected card to the discard pile and plays the card on the table\n * @param  {String} deckUrl URL to the deck being used\n * @param  {String} playerCard Card code of the card being played\n * @param  {Function} sendPlayerCard Calls back to play with the PlayerCard\n */\nexport async function playCardNow(deckUrl, playerCard, sendPlayerCard) {\n  const response = await fetch(\n    deckUrl + \"/pile/discard/add/?cards=\" + playerCard.code\n  )\n    .then((res) => {\n      if (!res.ok) {\n        throw Error(\"Could not fetch data for that resource\");\n      }\n      return res.json();\n    })\n    .then((data) => {\n      return playerCard;\n    });\n  sendPlayerCard(playerCard);\n}\n","import { useEffect, useState } from 'react';\nimport { bidding } from './scripts';\n\nconst Bid = ({ hands, order, dealer, sendBidData }) => {\n    const [playerBidded, setPlayerBidded] = useState(false);\n    const [playerBid, setPlayerBid] = useState(\"Take\");\n    const [highBid, setHighBid] = useState(\"\");\n    const [highBidder, setHighBidder] = useState(\"\");\n\n    const player = \"player1\";\n\n    var isDealer = (player === dealer)\n\n    useEffect(() => {\n        var bidRes = bidding(hands, order)\n        if (bidRes.highBid) {\n            setHighBid(bidRes.highBid);\n            setHighBidder(bidRes.highBidder);\n        }\n    }, [hands, order])\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (playerBid === \"Take\") {\n            setHighBidder(player);\n        } else if (playerBid !== \"Pass\") {\n            setHighBid(playerBid);\n            setHighBidder(player);\n        }\n        setPlayerBidded(true)\n    }\n\n    if (playerBidded) {\n        sendBidData({\n            highBid: { highBid },\n            highBidder: { highBidder }\n        })\n    }\n\n    return (\n        <div className=\"bid\">\n            <div className=\"currentBid\">{highBid} from {highBidder}</div>\n            {/* {trumpSelected && <div>in {trumpSuit} </div>} */}\n            {!playerBidded && <div>\n                <form onSubmit={handleSubmit}>\n                    <select\n                        value={playerBid}\n                        onChange={(e) => setPlayerBid(e.target.value)}>\n                        {isDealer && <option value=\"Take\">Take</option>}\n                        <option value=\"Pass\">Pass</option>\n                        {highBid === null && <option value=\"15\">15</option>}\n                        {highBid === \"15\" && <option value=\"20\">20</option>}\n                        <option value=\"25\">25</option>\n                        <option value=\"30\">30</option>\n                        <option value=\"30No\">30 No Draw</option>\n                    </select>\n                    <button>Place Bid</button>\n                </form>\n            </div>}\n        </div>\n    );\n}\n\nexport default Bid;","import { useState } from \"react\";\n\nconst SelectSuit = ({ highBidder, sendTrumpSuit }) => {\n    const [trumpSuit, setTrumpSuit] = useState(\"Hearts\");\n\n    const handleSuitSubmit = (e) => {\n        e.preventDefault();\n        sendTrumpSuit(trumpSuit)\n    };\n\n    return (\n        <div>\n            {highBidder === \"player1\" &&\n                <div>\n                    <form onSubmit={handleSuitSubmit}>\n                        <select\n                            value={trumpSuit}\n                            onChange={(e) => setTrumpSuit(e.target.value)}>\n                            <option value=\"Hearts\">Hearts</option>\n                            <option value=\"Diamonds\">Diamonds</option>\n                            <option value=\"Spades\">Spades</option>\n                            <option value=\"Clubs\">Clubs</option>\n                        </select>\n                        <button>Select Suit</button>\n                    </form>\n                </div>}\n        </div>)\n}\n\nexport default SelectSuit;","import { useState } from \"react\";\nimport \"./index.css\";\nimport { getNewCards } from \"./scripts\";\nimport useFetch from \"./useFetch\";\n\nconst Discard = ({ deckUrl, player, sendDiscardData }) => {\n  const [discard0, setDiscard0] = useState(false);\n  const [discard1, setDiscard1] = useState(false);\n  const [discard2, setDiscard2] = useState(false);\n  const [discard3, setDiscard3] = useState(false);\n  const [discard4, setDiscard4] = useState(false);\n\n  const { data, isPending, error } = useFetch(\n    deckUrl + \"/pile/\" + player + \"/list/\"\n  );\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const discards = [discard0, discard1, discard2, discard3, discard4];\n    var discardCodes = [];\n    for (let i = 0; i < 5; i++) {\n      discards[i] && discardCodes.push(data.piles[player].cards[i].code);\n    }\n    getNewCards(deckUrl, discardCodes, player, sendDiscardData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"discardHand\">\n        <input\n          type=\"checkbox\"\n          name=\"card0\"\n          onChange={(e) => setDiscard0(e.target.checked)}\n          checked={discard0}\n          className=\"dischardCheckBox\"\n        ></input>\n        <input\n          type=\"checkbox\"\n          name=\"card1\"\n          onChange={(e) => setDiscard1(e.target.checked)}\n          checked={discard1}\n        ></input>\n        <input\n          type=\"checkbox\"\n          name=\"card2\"\n          onClick={(e) => setDiscard2(e.target.checked)}\n          checked={discard2}\n        ></input>\n        <input\n          type=\"checkbox\"\n          name=\"card3\"\n          onChange={(e) => setDiscard3(e.target.checked)}\n          checked={discard3}\n        ></input>\n        <input\n          type=\"checkbox\"\n          name=\"card4\"\n          onChange={(e) => setDiscard4(e.target.checked)}\n          checked={discard4}\n        ></input>\n      </div>\n      <button>Discard Selected</button>\n    </form>\n  );\n};\n\nexport default Discard;\n","/** Display of bid information found on the discard and play views\n * @param  {Object} {bidData object of data related ot the bid\n * @param  {String} suit} Trump suit\n * @param  {Int} \n */\nconst BidInfo = ({ bidData, suit, book }) => {\n\n    var bid = bidData.highBid.highBid\n    var bidder = bidData.highBidder.highBidder\n\n    return (\n        <div>\n            {!suit && <h3>{(bid + \" from \" + bidder + \" in...\")}</h3>}\n            {suit && <h3>{(bid + \" from \" + bidder + \" in \" + suit)}</h3>}\n            {book && <h4>Book: {book} </h4>}\n        </div>\n    );\n}\n\nexport default BidInfo;","const PlayCard = ({ card }) => {\n\n    return (\n        <div>\n            <img src={card.image} alt=\"Card\" width=\"100%\" height=\"100%\" />\n        </div>\n\n    );\n}\n\nexport default PlayCard;","import { useState } from \"react\";\nimport useFetch from \"./useFetch\";\nimport { playCardNow } from \"./scripts\";\n\nconst PlayerTurn = ({\n  deckUrl,\n  player,\n  position,\n  leadSuit,\n  sendPlayCard,\n  trumpSuit,\n}) => {\n  const [playerCard, setPlayerCard] = useState(0);\n\n  const url = deckUrl + \"/pile/\" + player + \"/list/\";\n  const { data, error, isPending } = useFetch(url);\n\n  var cards = [];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(\"nachos\", playerCard, e);\n    playCardNow(deckUrl, cards[playerCard], sendPlayCard);\n  };\n\n  if (data) {\n    cards = data.piles[player].cards;\n  }\n\n//   if (cards[0] && !playerCard) {\n//     // setPlayerCard(cards[0]);\n//     setPlayerCard(0);\n//   }\n\n  // console.log(\"PC\",playerCard)\n  return (\n    <div>\n      {data && (\n        <form onSubmit={handleSubmit}>\n          <select\n            value={playerCard}\n            onChange={(e) => setPlayerCard(e.target.value)}\n          >\n            {cards[0] && <option value={0}>{cards[0].code}</option>}\n            {cards[1] && <option value={1}>{cards[1].code}</option>}\n            {cards[2] && <option value={2}>{cards[2].code}</option>}\n            {cards[3] && <option value={3}>{cards[3].code}</option>}\n            {cards[4] && <option value={4}>{cards[4].code}</option>}\n          </select>\n          <button>Play Card</button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default PlayerTurn;\n","import { useState } from \"react\";\nimport { getBestCard, getWorstCard } from \"./scripts\";\nimport useFetch from \"./useFetch\";\n\nconst Turn = ({ deckUrl, player, position, leadSuit, sendPlayCard, trumpSuit }) => {\n\n    const url = deckUrl + \"/pile/\" + player + \"/list/\";\n    const { data, error, isPending } = useFetch(url);\n    const [cardPlay,setCardPlay] = useState(null);\n\n    var cards = [];\n\n    if (data && !cardPlay) {\n        cards = data.piles[player].cards;\n        \n        var taco = playCard(position, cards, trumpSuit);\n        \n        fetch(deckUrl + \"/pile/discard/add/?cards=\" + taco.code)\n            .then(res => {\n                if (!res.ok) {\n                    throw Error('Could not fetch data for that resource');\n                }\n                return res.json();\n            })\n            .then(data => {\n                setCardPlay(taco)\n            });\n    }\n\n    if (data && cardPlay) {\n        sendPlayCard(cardPlay)\n    }\n\n    return (\n        <div>\n            {error && <div>{error}</div>}\n            {isPending && <div>Thinking....</div>}\n            {data && <div>Dawn</div>};\n        </div>\n    )\n}\n\nexport default Turn;\n\nfunction playCard(position, cards, trumpSuit) {\n    var card;\n    switch (position) {\n        case 1:\n            card = getWorstCard(cards, trumpSuit);\n            break;\n        case 2:\n            card = getWorstCard(cards, trumpSuit);\n            break;\n        case 3:\n            card = getBestCard(cards, trumpSuit);\n            break;\n        case 4:\n            card = getBestCard(cards, trumpSuit);\n            break;\n        default:\n            console.log(\"defaultHit\")\n\n    }\n    return card\n}","import { useState } from \"react\";\nimport PlayCard from \"./PlayCard\";\nimport PlayerTurn from \"./PlayerTurn\";\nimport { getCardValue } from \"./cardValues\";\nimport Turn from \"./Turn\";\n\nconst Play = ({ deckUrl, player, order, sendBookInfo, book, trumpSuit }) => {\n  const [playCard1, setPlayCard1] = useState(\"\");\n  const [playCard2, setPlayCard2] = useState(\"\");\n  const [playCard3, setPlayCard3] = useState(\"\");\n  const [playCard4, setPlayCard4] = useState(\"\");\n  const [leadSuit, setLeadSuit] = useState(\"\");\n  const [turn, setTurn] = useState(1);\n\n  var winner;\n\n  if (turn === 1 && playCard1) {\n    // Need to add code that moves the played card to the book pile\n    let guac = playCard1.code.charAt(1);\n    setLeadSuit(guac);\n    setTurn(2);\n  } else if (turn === 2 && playCard2) {\n    // Need to add code that moves the played card to the book pile\n    setTurn(3);\n  } else if (turn === 3 && playCard3) {\n    // Need to add code that moves the played card to the book pile\n    setTurn(4);\n  } else if (turn === 4 && playCard4) {\n    // Need to add code that moves the played card to the book pile\n    setTurn(5);\n  } else if (turn === 5) {\n    book = [playCard1, playCard2, playCard3, playCard4];\n    let curBestValue = 50;\n    for (let i = 0; i < book.length; i++) {\n      let val = getCardValue(book[i].code, trumpSuit);\n    //   console.log(val, curBestValue, playCard3, playCard4);\n      if (val < curBestValue) {\n        curBestValue = val;\n        winner = i;\n      }\n    }\n    let highCard = book[winner].code;\n    sendBookInfo({\n      winner,\n      highCard,\n    });\n    setTurn(0);\n    setPlayCard1(\"\");\n    setPlayCard2(\"\");\n    setPlayCard3(\"\");\n    setPlayCard4(\"\");\n  }\n\n  return (\n    <div>\n      <div className=\"handInfo\">\n        {turn === 5 && <div>Find Winner Now, {winner}</div>}\n      </div>\n      <div className=\"hand\">\n        <div>\n          {turn > 0 && <div>Napkin</div>}\n          {turn > 0 && !playCard1 && (\n            <Turn\n              deckUrl={deckUrl}\n              player={order[0]}\n              position={1}\n              sendPlayCard={setPlayCard1}\n              trumpSuit={trumpSuit}\n            />\n          )}\n          {turn > 1 && !playCard2 && (\n            <Turn\n              deckUrl={deckUrl}\n              player={order[1]}\n              position={2}\n              sendPlayCard={setPlayCard2}\n              trumpSuit={trumpSuit}\n              leadSuit={leadSuit}\n            />\n          )}\n          {turn > 2 && !playCard3 && (\n            <Turn\n              deckUrl={deckUrl}\n              player={order[2]}\n              position={3}\n              sendPlayCard={setPlayCard3}\n              trumpSuit={trumpSuit}\n              leadSuit={leadSuit}\n            />\n          )}\n          {turn > 3 && !playCard4 && (\n            <PlayerTurn\n              deckUrl={deckUrl}\n              player={order[3]}\n              position={4}\n              sendPlayCard={setPlayCard4}\n              trumpSuit={trumpSuit}\n              leadSuit={leadSuit}\n            />\n          )}\n        </div>\n        {playCard1 && <PlayCard card={playCard1} />}\n        {playCard2 && <PlayCard card={playCard2} />}\n        {playCard3 && <PlayCard card={playCard3} />}\n        {playCard4 && <PlayCard card={playCard4} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Play;\n","import { useState } from \"react\";\nimport useFetch from \"./useFetch\";\nimport Hand from \"./Hand\";\nimport Bid from \"./Bid\";\nimport { dealHand } from \"./deckFuncs\";\nimport SelectSuit from \"./SelectSuit\";\nimport Discard from \"./Discard\";\nimport BidInfo from \"./BidInfo\";\nimport Play from \"./Play\";\n\nconst Round = ({ scoreLog, sendScoreLog }) => {\n  const [hands, setHands] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [bidData, setBidData] = useState(\"\");\n  const [stage, setStage] = useState(\"Deal\");\n  const [trumpSuit, setTrumpSuit] = useState(\"\");\n  const [discardData, setDiscardData] = useState(\"\");\n  const [bookInfo, setBookInfo] = useState(null);\n  const [bookNum, setBookNum] = useState(1);\n  const [roundLog, setRoundLog] = useState([]);\n  var player = \"player1\";\n\n  const { data, error } = useFetch(\n    \"https://deckofcardsapi.com/api/deck/new/draw/?count=20\"\n  );\n\n  var deckUrl = null;\n\n  if (data) {\n    deckUrl = \"https://deckofcardsapi.com/api/deck/\" + data.deck_id;\n  }\n\n  const order = [\"player1\", \"player2\", \"player3\", \"player4\"];\n  const dealer = order[scoreLog.roundNum % 4];\n  const turnOrder = getTurnOrder(bookInfo);\n\n  function getTurnOrder(bookInfo) {\n    var val;\n    if (!bookInfo) {\n      val = [\"player2\", \"player3\", \"player4\", \"player1\"];\n    } else {\n      val = null;\n    }\n    return val;\n  }\n\n  if (data && stage === \"Deal\") {\n    let handRes = dealHand(data.cards);\n    setHands(handRes);\n    fetch(\n      deckUrl + \"/pile/\" + order[0] + \"/add/?cards=\" + handRes[0].toString()\n    )\n      .then((res) => {\n        if (!res.ok) {\n          throw Error(\"Could not fetch data for that resource\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        return fetch(\n          deckUrl + \"/pile/\" + order[1] + \"/add/?cards=\" + handRes[1].toString()\n        );\n      })\n      .then(function (response) {\n        if (response.ok) {\n          return response.json();\n        } else {\n          return Promise.reject(response);\n        }\n      })\n      .then((data) => {\n        return fetch(\n          deckUrl + \"/pile/\" + order[2] + \"/add/?cards=\" + handRes[2].toString()\n        );\n      })\n      .then(function (response) {\n        if (response.ok) {\n          return response.json();\n        } else {\n          return Promise.reject(response);\n        }\n      })\n      .then((data) => {\n        return fetch(\n          deckUrl + \"/pile/\" + order[3] + \"/add/?cards=\" + handRes[3].toString()\n        );\n      })\n      .then(function (response) {\n        if (response.ok) {\n          setIsPending(false);\n          return response.json();\n        } else {\n          return Promise.reject(response);\n        }\n      })\n      .catch((err) => {\n        if (err.name === \"AbortError\") {\n          console.log(\"fetch aborted\");\n        } else {\n        }\n      });\n    setStage(\"Bid\");\n  }\n\n  if (bidData && stage === \"Bid\") {\n    setStage(\"SuitSelect\");\n  }\n\n  if (trumpSuit && stage === \"SuitSelect\") {\n    setStage(\"Discard\");\n  }\n\n  if (discardData && stage === \"Discard\") {\n    setStage(\"Play\");\n  }\n\n  if (bookInfo) {\n    // console.log(\"record\", bookInfo)\n    // var meow = order[bookInfo.winner]\n    // console.log(\"mew\", meow)\n    let winner = bookInfo.winner;\n    let highCard = bookInfo.highCard;\n    roundLog.push({ bookNum, winner, highCard });\n    setRoundLog(roundLog);\n    setBookNum(bookNum + 1);\n    setBookInfo(\"\");\n  }\n\n  // console.log(\"roundlog\",roundLog)\n\n  return (\n    <div className=\"content\">\n      {stage === \"Deal\" && isPending && <div>Dealing....</div>}\n      {stage === \"Bid\" && (\n        <div>\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <Bid\n            hands={hands}\n            order={order}\n            dealer={dealer}\n            sendBidData={setBidData}\n          />\n        </div>\n      )}\n      {stage === \"SuitSelect\" && (\n        <div>\n          <BidInfo bidData={bidData} />\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <SelectSuit\n            highBidder={bidData.highBidder.highBidder}\n            sendTrumpSuit={setTrumpSuit}\n          />\n        </div>\n      )}\n      {stage === \"Discard\" && (\n        <div>\n          <BidInfo bidData={bidData} suit={trumpSuit} />\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <Discard\n            deckUrl={deckUrl}\n            player={player}\n            sendDiscardData={setDiscardData}\n          />\n        </div>\n      )}\n      {stage === \"Redraw\" && (\n        <div>\n          <BidInfo bidData={bidData} suit={trumpSuit} />\n          <div>{discardData.toString()}</div>\n        </div>\n      )}\n      {stage === \"Play\" && bookNum === 1 && (\n        <div>\n          <BidInfo bidData={bidData} suit={trumpSuit} book={bookNum} />\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <Play\n            deckUrl={deckUrl}\n            player={player}\n            order={turnOrder}\n            sendBookInfo={setBookInfo}\n            book={bookNum}\n            trumpSuit={trumpSuit}\n          />\n        </div>\n      )}\n      {stage === \"Play\" && bookNum === 2 && (\n        <div>\n          <BidInfo bidData={bidData} suit={trumpSuit} book={bookNum} />\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <Play\n            deckUrl={deckUrl}\n            player={player}\n            order={turnOrder}\n            sendBookInfo={setBookInfo}\n            book={bookNum}\n            trumpSuit={trumpSuit}\n          />\n        </div>\n      )}\n      {stage === \"Play\" && bookNum === 3 && (\n        <div>\n          <BidInfo bidData={bidData} suit={trumpSuit} book={bookNum} />\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <Play\n            deckUrl={deckUrl}\n            player={player}\n            order={turnOrder}\n            sendBookInfo={setBookInfo}\n            book={bookNum}\n            trumpSuit={trumpSuit}\n          />\n        </div>\n      )}\n      {stage === \"Play\" && bookNum === 4 && (\n        <div>\n          <BidInfo bidData={bidData} suit={trumpSuit} book={bookNum}/>\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <Play\n            deckUrl={deckUrl}\n            player={player}\n            order={turnOrder}\n            sendBookInfo={setBookInfo}\n            book={bookNum}\n            trumpSuit={trumpSuit}\n          />\n        </div>\n      )}\n\n      {stage === \"Play\" && bookNum === 5 && (\n        <div>\n          <BidInfo bidData={bidData} suit={trumpSuit} book={bookNum} />\n          <Hand deckUrl={deckUrl} player={player} stage={stage} />\n          <Play\n            deckUrl={deckUrl}\n            player={player}\n            order={turnOrder}\n            sendBookInfo={setBookInfo}\n            book={bookNum}\n            trumpSuit={trumpSuit}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Round;\n","export function dealHand(cards) {\n    const hand1 = [\n      cards[0].code,\n      cards[1].code,\n      cards[2].code,\n      cards[12].code,\n      cards[13].code,\n    ];\n    const hand2 = [\n      cards[3].code,\n      cards[4].code,\n      cards[5].code,\n      cards[14].code,\n      cards[15].code,\n    ];\n    const hand3 = [\n      cards[6].code,\n      cards[7].code,\n      cards[8].code,\n      cards[16].code,\n      cards[17].code,\n    ];\n    const hand4 = [\n      cards[9].code,\n      cards[10].code,\n      cards[11].code,\n      cards[18].code,\n      cards[19].code,\n    ];\n  \n    return [hand1, hand2, hand3, hand4];\n  }","import { useState } from 'react';\nimport Score from './Score';\nimport Round from './Round';\n\nconst Game = () => {\n    const [scoreLog, setScoreLog] = useState({\n        roundNum: 0,\n        team1Score: 0,\n        team2Score: 0\n    });\n\n    return (\n        <div className=\"game\">\n            <Score scoreLog={scoreLog} />\n            <Round scoreLog={scoreLog} sendScoreLog={setScoreLog} />\n        </div>\n    );\n};\n\n// const bidList = []\n\nexport default Game;\n\n","import { useState } from 'react';\nimport './App.css';\nimport Game from './Game';\n\nfunction App() {\n  const [inGame, setInGame] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h2>45s</h2>\n      { inGame===false && <button onClick={() => setInGame(true)}>Start Game</button>}\n      { inGame && <Game />}\n       \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}